1.1
We first try connecting to weer.nl and retreiving the wesbite data.

HEAD / HTTP/1.1
host:weer.nl

HTTP/1.1 301 Moved Permanently
Date: Tue, 20 Nov 2018 12:53:25 GMT
Server: Apache
Status: 301 Moved Permanently
Location: http://www.weer.nl/
Content-Type: text/html; charset=UTF-8

We get a 301 status code saying that the content has been moved to www.weer.nl so we try connecting to www.weer.nl instead.

HEAD / HTTP/1.1
host:www.weer.nl

HTTP/1.1 200 OK
Age: 351
Cache-Control: max-age=600
Content-Type: text/html; charset=utf-8
Date: Tue, 20 Nov 2018 12:48:16 GMT
Server: nginx/1.12.0
Vary: Accept-Encoding
Via: 1.1 varnish-v4
X-Cache: HIT
X-Powered-By: PHP/5.5.26
X-Varnish: 1046925084 1045199205
Connection: keep-alive

The HTTP request was succesfull so we can retreive the body content next.

GET / HTTP/1.1
host:www.weer.nl

HTTP/1.1 200 OK
Accept-Ranges: bytes
Age: 370
Cache-Control: max-age=600
Content-Type: text/html; charset=utf-8
Date: Tue, 20 Nov 2018 12:48:16 GMT
Server: nginx/1.12.0
Vary: Accept-Encoding
Via: 1.1 varnish-v4
X-Cache: HIT
X-Powered-By: PHP/5.5.26
X-Varnish: 1048576424 1045199205
transfer-encoding: chunked
Connection: keep-alive

Following to this we get the HTTP response body with the html code of the webpage.

1.2
Yes the html code is identical to that what we get in a web browser when navigating to this webpage. When clicking any link on the site we are also redirected to this webpage.

1.3
The X-Cache header field shows if we have found the data requested on a Cache or not. In our example the value of the header is HIT which means that we indeed retreived our content from a cache.

1.4
The Cache-Control header field indicates after how long the contents of the cache are outdated. The content should not be used anymore if the last update of this cache is longer ago than the indicated expiration time.

2.1
When the Content-length field is smaller than the number of characters it cuts of the excess and only uploads the first n characters of the string. (Where n is the value of the Content-length field).
When the Content-length field is larger than the number of characters it adds /r/n at the ecnd of the string which corresponds to newline characters. So it keeps addind "empty" newline characters until the uploaded number of characters is equal to the value of the content-length field.

3.1
When reloading the website nothing happens and we stay on the same page which means we stay authenticated.

3.2
If we try requesting the same page it again asks us to authenticate ourselves. This is because HTTP is stateless and once a user logs in, the login information has to be resend to the server with every single HTTP request. When using a webbrowser, the browser automatically sends the login information with every HTTP request and therefore we don't need to authenticate ourselves every time.

4.1
Mastermind

4.2 & 4.3

+ indicates a positive feature/aspect
- indicates a negative feature/aspect

Example 1: http://www.webgamesonline.com/mastermind/
https://i.gyazo.com/d24e17b9d6db15386d980d1c224647fa.png

GAMEPLAY

-The way balls are placed: The user clicks on the ball. Then, the cursor's texture is replaced by the selected ball, and clicking on the desired hole places the ball there. Dragging the ball is impossible. I consider this bad design, because it's neither as intuitive as dragging the ball (like example 2?) or as fast as clicking the ball and having it instantly appear in the next hole (like example 4). If the user misplaced a ball inside of a hole, it's impossible to take them out. They can be overwritten by another color, but taking them out of the hole would be more intuitive.

-Amount of different ball colors: 8. That's a bit much in the case of a ball code length of 4.

+The amount of balls in the code can be altered. While I consider this feature superfluous (as I'm not interested in playing Mastermind with more than 4 balls in the code), it's a neat option.

+Duplicates in the code (i.e. having the same ball color in the code more than once) can be turned on or off. This is a great option to have.

+The check button appears right next to the hole where the balls are placed. In this case, that's good design because the cursor will be very close to the check button after placing a ball in the hole.

PRESENTATION

-The color scheme is ugly, and the blue text on the red background is annoying to read.

-The textures have a very slight white outline. It looks hideous and could be fixed with 5 minutes of Photoshop work.

+The content on the website is centered.

Example 2: http://www.kidsmathgamesonline.com/logic/mastermind.html
https://i.gyazo.com/156faddd856507f43d7ef72625472acb.png

GAMEPLAY

+The way balls are placed: balls can be dragged to the holes. This is good design. While it's not the fastest option, it's definitely the most intuitive, because it comes closest to physically picking up and letting go of a ball. When a ball is misplaced, it can be taken out of the hole and placed in another one. Again, very intuitive design. Unfortunately, it's not possible to overwrite a ball by another color (the ball first has to be taken out).

-Amount of different ball colors: 8. That's a bit much in the case of a ball code length of 4.

-This game was written in Flash.

PRESENTATION

-The OK button has an obnoxious animation.

+Textures look good and the color scheme is decent.

+The content on the website is centered.

Example 3: http://www.puffgames.com/mastermind/
https://i.imgur.com/iy2eWwp.jpg

GAMEPLAY

-The way balls are placed: identical to example 1.

+Amount of different ball colors: 6. Great amount in the case of a ball code length of 4.

-There is no check/OK button. The game automatically submits the choice when the fourth ball is placed. While it does speed up the gameplay slightly, I consider it bad design, because now, the user is unable to look at his choice and analyze it before committing to it.

-The game is written in Flash.

PRESENTATION

-The background looks messy. Ball textures look alright.

-The game is not centered on the webpage, which is very off-putting.

Example 4: http://www.archimedes-lab.org/mastermind.html
https://i.gyazo.com/56b86c9cc0f84a0f3d4de0e9167260ee.png

GAMEPLAY

+The way the balls are placed: when the user clicks a ball, that ball is automatically placed into the next empty spot. This is great design, because it is the fastest way to play Mastermind.

-When you win, the website gives you a JavaScript window to tell you that you won. It doesn't have any visual indicator, which is a shame because seeing those 4 black balls when winning a game is very satisfying.

+Amount of different ball colors: 6. Great amount in the case of a ball code length of 4.

PRESENTATION

+The game looks like a Windows 98 application, which is a pleasing aesthetic (but probably mostly for nostalgic reasons).

+The ball textures look nice.

-The content on this website is not centered and looks weird on a 1080p monitor.